@GenModel(documentation="
      Entity Data Model Wrapper part of the Common Schema Definition Language
    

      Entity Data Model part of the Common Schema Definition Language
    ")
@namespace(uri="http://docs.oasis-open.org/odata/ns/edmx", prefix="edmx")
package edmx;

import "http://www.eclipse.org/emf/2003/XMLType";
import "platform:/resource/hu.blackbelt.judo.generator/hu.blackbelt.judo.generator.meta.odata/model/edm.ecore";

@ExtendedMetaData(name="", kind="mixed")
class DocumentRoot {

  @ExtendedMetaData(kind="elementWildcard", name=":mixed")
  !unique attr ecore.EFeatureMapEntry[*] mixed;

  @ExtendedMetaData(kind="attribute", name="xmlns:prefix")
  transient !resolve val ecore.EStringToStringMapEntry[*] xMLNSPrefixMap;

  @ExtendedMetaData(kind="attribute", name="xsi:schemaLocation")
  transient !resolve val ecore.EStringToStringMapEntry[*] xSISchemaLocation;

  @ExtendedMetaData(kind="element", name="Edmx", namespace="##targetNamespace")
  volatile transient derived !resolve val Edmx[0..?] edmx;
}

@ExtendedMetaData(name="TEdmx", kind="elementOnly")
class Edmx {

  @ExtendedMetaData(kind="element", name="Reference", namespace="##targetNamespace")
  !resolve val TReference[*] Reference;

  @ExtendedMetaData(kind="element", name="DataServices", namespace="##targetNamespace")
  !resolve val TDataServices[1] DataServices;

  @ExtendedMetaData(kind="attribute", name="Version")
  unsettable attr TVersion[1] Version;
}

@ExtendedMetaData(name="TDataServices", kind="elementOnly")
class TDataServices {

  @ExtendedMetaData(kind="element", name="Schema", namespace="http://docs.oasis-open.org/odata/ns/edm")
  !resolve val edm.SchemaType[+] Schema;
}

@ExtendedMetaData(name="TInclude", kind="empty")
class TInclude {

  @ExtendedMetaData(kind="attribute", name="Alias")
  attr edm.TSimpleIdentifier Alias;

  @ExtendedMetaData(kind="attribute", name="Namespace")
  attr edm.TNamespaceName[1] Namespace;
}

@ExtendedMetaData(name="TIncludeAnnotations", kind="empty")
class TIncludeAnnotations {

  @ExtendedMetaData(kind="attribute", name="Qualifier")
  attr edm.TSimpleIdentifier Qualifier;

  @ExtendedMetaData(kind="attribute", name="TargetNamespace")
  attr edm.TNamespaceName TargetNamespace;

  @ExtendedMetaData(kind="attribute", name="TermNamespace")
  attr edm.TNamespaceName[1] TermNamespace;
}

@ExtendedMetaData(name="TReference", kind="elementOnly")
class TReference {

  @ExtendedMetaData(kind="group", name="group:0")
  !unique attr ecore.EFeatureMapEntry[*] Group;

  @ExtendedMetaData(kind="element", name="Include", namespace="##targetNamespace", group="#group:0")
  volatile transient derived !resolve val TInclude[*] Include;

  @ExtendedMetaData(kind="element", name="IncludeAnnotations", namespace="##targetNamespace", group="#group:0")
  volatile transient derived !resolve val TIncludeAnnotations[*] IncludeAnnotations;

  @ExtendedMetaData(kind="element", name="Annotation", namespace="http://docs.oasis-open.org/odata/ns/edm", group="#group:0")
  volatile transient derived !resolve val edm.AnnotationType[*] Annotation;

  @ExtendedMetaData(kind="attribute", name="Uri")
  attr type.AnyURI[1] Uri;
}

@ExtendedMetaData(name="TVersion")
enum TVersion {
  _40 = 0;
}

@ExtendedMetaData(name="TVersion:Object", baseType="TVersion")
datatype TVersionObject : org.eclipse.emf.common.util.Enumerator;

