operation SOURCE!RdbmsModel transformModel() : TARGET!RdbmsModel {
	var target = new TARGET!RdbmsModel();
	
	var emfTool : new Native("org.eclipse.epsilon.emc.emf.tools.EmfTool");
	target.configuration = emfTool.getECoreUtil().copy(self.configuration);
	
	return target;
}

operation transformFieldTypes() {

	var uuidSeq = new Sequence(String);
	
	for (type in NEW!RdbmsFieldType) {
		var target = new TARGET!RdbmsFieldType();
		target.name = type.name;
		target.uuid = type.uuid;
		target.rdbmsTypeName = type.rdbmsTypeName;
		
		uuidSeq.add(type.uuid);
	}
	
	var prevUuids = PREVIOUS!RdbmsFieldType.all.collect(type | type.uuid);
	if (uuidSeq.excludingAll(prevUuids).size() > 0) {
		for (uuid in uuidSeq.excludingAll(prevUuids)) {
			var current = PREVIOUS!RdbmsFieldType.all.select(fieldType | fieldType.uuid = uuid);
			var target = new TARGET!RdbmsFieldType();
			target.name = current.name;
			target.uuid = current.uuid;
			target.rdbmsTypeName = current.rdbmsTypeName;
		}
	}
}

operation SOURCE!RdbmsTable createCreateTableOperation() {
	var tableOp = new TARGET!RdbmsTableOperation();
	
	tableOp.uuid = uuid3(self.uuid, "CREATED");
	tableOp.sqlName = self.sqlName + "_OPERATION_CREATE";
	tableOp.name = self.name + "_OPERATION_CREATE";
	
	tableOp.operationType = TARGET!RdbmsTableOperationType#CREATE;
	tableOp.table = self.transformTable();
}

operation SOURCE!RdbmsTable createDeleteTableOperation() {
	var tableOp = new TARGET!RdbmsTableOperation();
	
	tableOp.uuid = uuid3(self.uuid, "DELETED");
	tableOp.sqlName = self.sqlName + "_OPERATION_DELETE";
	tableOp.name = self.name + "_OPERATION_DELETE";
	
	tableOp.operationType = TARGET!RdbmsTableOperationType#DELETE;
	tableOp.table = self.transformTable();
}

operation SOURCE!RdbmsTable transformTable() : TARGET!RdbmsTable {
	var target = new TARGET!RdbmsTable();
	
	target.sqlName = self.sqlName;
	target.uuid = self.uuid;
	target.name = self.name;
	for (field in self.fields) {
		target.fields.add(field.transformField());
	}
	target.primaryKey = target.fields.select(field | field.uuid = self.primaryKey.uuid).first();
	
	return target;
}

operation SOURCE!RdbmsField transformField() : TARGET!RdbmsField {
	var target;
	
	if (self.isTypeOf(SOURCE!RdbmsValueField)) {
		target = new TARGET!RdbmsValueField();
	} else if (self.isTypeOf(SOURCE!RdbmsForeignKey)) {
		target = new TARGET!RdbmsForeignKey();
		target.foreignKeySqlName = self.foreignKeySqlName;
	} else if (self.isTypeOf(SOURCE!RdbmsIdentifierField)) {
		target = new TARGET!RdbmsIdentifierField();
	} else {
		target = new TARGET!RdbmsField();
	}
	
	target.sqlName = self.sqlName;
	target.uuid = self.uuid;
	target.name = self.name;
	target.sqlName = self.sqlName;
	
	target.type = TARGET!RdbmsFieldType.all.select(type | type.uuid = self.type.uuid).first();
	
	return target;
}