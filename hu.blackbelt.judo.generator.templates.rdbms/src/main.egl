[%
import "operations/_importAll.eol";

getDdlTemplate("create-table").genCreateTables(getTables());
getDdlTemplate("set-not-null").genSetNotNull(getTables());
getDdlTemplate("drop-not-null").genDropNotNull(getTables());
getDdlTemplate("create-foreignkey").genCreateForeignKeys(getForeignKeys());

operation Template genCreateTables(tables : Collection) : Any {
	self.populate("tables", tables);
	self.generate(getGenPath() + "create_tables.sql");
	self.reset();
}

operation Template genSetNotNull(tables : Collection) : Any {
	self.populate("tables", tables);
	self.generate(getGenPath() + "set_not_null.sql");
	self.reset();
}

operation Template genDropNotNull(tables : Collection) : Any {
	self.populate("tables", tables);
	self.generate(getGenPath() + "drop_not_null.sql");
	self.reset();
}

operation Template genCreateForeignKeys(foreignKeys : Collection) : Any {
	self.populate("foreignKeys", foreignKeys);
	self.generate(getGenPath() + "create_foreignkeys.sql");
	self.reset();
}

operation getDdlTemplate (templateName : String) : Any {
    var formatter = new Native("hu.blackbelt.judo.generator.formatter.sql.SqlCreateTableFormatter");
	var tf = TemplateFactory.load("templates/sql/" + templateName + ".egl");
	// tf.setFormatter(formatter);
	return tf;
}


operation getTables () : Collection {
	return RDBMS!RdbmsTable.all;
}


operation getForeignKeys () : Collection {
	return RDBMS!RdbmsForeignKey.all;
}

operation getGenPath() : String {
	return "sql/" + RDBMS!RdbmsConfiguration.all.first().dialect.toLowercase() + "/";
}

%]