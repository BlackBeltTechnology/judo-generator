[%
  import "../../operations/_importAll.eol";
  import "../../main.egl";
  
  out.setContentType("Java");
%]


{%- if table.after_delete %}
--changeset generator:create_function_AD_{{ table.name }}#{{ changesetversion }} {{ changesetextraargs }} {{ ddlmacro.DBMSTYPE }} logicalFilePath:triggersViewsConstraintCreate stripComments:true {{ ddlmacro.endDelimiter() }}
{{ ddlmacro.CREATE_TRIGGER('AD_' + table.name, table.name, 'AFTER', 'DELETE') }}
    {{ ddlmacro.DECLARE }}
        {{ ddlmacro.DEFVAR('EVENT_GUID', 'INTEGER') }}
    {{ ddlmacro.BEGIN }}
        {{ ddlmacro.nextval( 'EVENT_GUID' ) }}
        INSERT INTO V_FRW_EVENT (C_GUID,      C_ACT,         C_EVENT_TYPE, C_DOMAIN_NAME,                  C_CLASS_NAME,           C_OBJECT_ID)
        VALUES                  (EVENT_GUID, {{ ddlmacro.TR_TIME }}, 'DELETE',     '{{ table.node.parent.name }}', '{{ table.umlname }}',  {{ ddlmacro.OLD }}.ID);

        {{ ddlmacro.RETURN_OLD }}
    END;
{{ ddlmacro.END_TRIGGER() }}
{%- endif %}

-- {%- macro CREATE_TRIGGER(name, table, timing, type) -%}
-- {%- set _ = glob.update({'CURRENT_TRIGGER_NAME':name}) -%}
-- CREATE TRIGGER {{ name }} {{ timing }} {{ type }} ON {{ table }}
--     FOR EACH ROW
-- {%- endmacro -%}
-- {%- endif %}

[%for (table in tables) {%]
--changeset generator:after_delete_event_trigger_create_[%=table.sqlName%]#[%=version()%] logicalFilePath:afterDeleteEventTableTriggerCreate stripComments:true
[%}%]
