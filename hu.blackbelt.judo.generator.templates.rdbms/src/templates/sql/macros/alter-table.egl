[%
  import "../../../operations/_importAll.eol";
%]

[% if (table.nameChanged) {%]
--changeset generator:RENAME_TABLE_[%= table.sqlName %]#[%= version() %] logicalFilePath:[%= scriptName %] stripComments:true
-- [%= previousTable.name %] [%= previousTable.uuid %] TO [%= table.name %] [%= table.uuid %]
ALTER TABLE [%= previousTable.sqlName %] RENAME TO [%= tssable.sqlName %];
[% } %]

[% if (hasFeature('SupportMultipleColumnModificationInOneStatement')) { %]
--changeset generator:ALTER_TABLE_ADD_COLUMN_[%= table.sqlName %]#[%= version() %] logicalFilePath:[%= scriptName %] stripComments:true
-- [%= table.name %] [%= table.uuid %]
ALTER TABLE [%= table.sqlName %] 
		[% if (dialect() == 'Oracle') { %]
			ADD (
		[% } %]

		[% for (field in modifyTableOperation.createFieldOperations.collect(o | o.field)) { %]
			[% if (dialect() == 'Oracle') { %]
				[%= field.sqlName %] [%= field.toFieldDefinition() %]
			[% } else { %]
				ADD COLUMN [%= field.sqlName %] [%= field.toFieldDefinition() %]
			[% } %]
			[% if (hasMore) { out.print(","); } %]  -- [%= field.name %] [%= field.uuid %]
		[% } %]
		
		[% if (dialect() == 'Oracle') { %]
			)
		[% } %]
;[% out.println("\n"); %]
[% } else { %]
		[% for (field in modifyTableOperation.createFieldOperations.collect(o | o.field)) { %]
--changeset generator:ALTER_TABLE_ADD_COLUMN_[%= table.sqlName %]_[%=field.sqlName%]#[%= version() %] logicalFilePath:[%= scriptName %] stripComments:true
-- [%= field.name %] [%= field.uuid %]
ALTER TABLE [%= table.sqlName %] ADD COLUMN [%= field.sqlName %] [%= field.toFieldDefinition() %];
			[% out.println("\n"); %]
		[% } %]
[% } %]


[% if (hasFeature('SupportMultipleColumnModificationInOneStatement')) { %]
--changeset generator:ALTER_TABLE_DROP_COLUMN_[%= table.sqlName %]#[%= version() %] logicalFilePath:[%= scriptName %] stripComments:true
-- [%= table.name %] [%= table.uuid %]
ALTER TABLE [%= table.sqlName %] 
		[% if (dialect() == 'Oracle') { %]
			ADD (
		[% } %]

		[% for (field in modifyTableOperation.createFieldOperations.collect(o | o.field)) { %]
			[% if (dialect() == 'Oracle') { %]
				[%= field.sqlName %] [%= field.toFieldDefinition() %]
			[% } else { %]
				ADD COLUMN [%= field.sqlName %] [%= field.toFieldDefinition() %]
			[% } %]
			[% if (hasMore) { out.print(","); } %]  -- [%= field.name %] [%= field.uuid %]
		[% } %]
		
		[% if (dialect() == 'Oracle') { %]
			)
		[% } %]
;[% out.println("\n"); %]
[% } else { %]
		[% for (field in modifyTableOperation.createFieldOperations.collect(o | o.field)) { %]
--changeset generator:ALTER_TABLE_ADD_COLUMN_[%= table.sqlName %]_[%=field.sqlName%]#[%= version() %] logicalFilePath:[%= scriptName %] stripComments:true
-- [%= field.name %] [%= field.uuid %]
ALTER TABLE [%= table.sqlName %] ADD COLUMN [%= field.sqlName %] [%= field.toFieldDefinition() %];
			[% out.println("\n"); %]
		[% } %]
[% } %]


[% if (hasFeature('SupportMultipleColumnModificationInOneStatement')) { %]
--changeset generator:ALTER_TABLE_ALTER_COLUMN_[%= table.sqlName %]#[%= version() %] logicalFilePath:[%= scriptName %] stripComments:true
-- [%= table.name %] [%= table.uuid %]
ALTER TABLE [%= table.sqlName %] 
		[% if (dialect() == 'Oracle') { %]
			MODIFY (
		[% } %]

		[% for (field in modifyTableOperation.modifyFieldOperations.collect(o | o.field)) { %]
			[% if (dialect() == 'Oracle') { %]
				[%= field.sqlName %] [%= field.toFieldDefinition() %]
			[% } else { %]
				ALTER COLUMN [%= field.sqlName %] [%= field.toFieldDefinition() %]
			[% } %]
			[% if (hasMore) { out.print(","); } %]  -- [%= field.name %] [%= field.uuid %]
		[% } %]
		
		[% if (dialect() == 'Oracle') { %]
			)
		[% } %]
;[% out.println("\n"); %]
	[% } else { %]
		[%for (field in table.fields.select(f | f.mandatory and not f.isPrimary())) { %]
--changeset generator:ALTER_TABLE_ADD_COLUMN_[%= table.sqlName %]_[%=field.sqlName%]#[%= version() %] logicalFilePath:[%= scriptName %] stripComments:true
-- [%= field.name %] [%= field.uuid %]
ALTER TABLE [%= table.sqlName %] ADD COLUMN [%= field.sqlName %] [%= field.toFieldDefinition() %];
			[% out.println("\n"); %]
		[% } %]
[% } %]

