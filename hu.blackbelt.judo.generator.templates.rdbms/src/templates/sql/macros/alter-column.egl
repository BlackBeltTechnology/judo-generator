[%
  import "../../../operations/_importAll.eol";
%]
[%for (fop in modifyTableOperation.modifyFieldOperations.select(m | m.fieldIsAltered())) {
		("------------------------------------------------------------------------------------------------------------------------").println("");
	    ("Review required on model attribute change type. Have to define a mogration script to be able to create correct sql.").println("");
	    (fop.previousField.name + " (" + table.sqlName + "." + fop.previousField.sqlName + ")").println("Previous: ");
	    (fop.field.name + " (" + table.sqlName + "." + fop.field.sqlName + ")").println("Current: ");
        (fop.changeTypeAsString()).println("Change type:");
	    ("").println("");
		("Please put the migration script file called: " + "migration/" + version() + "/migrate-field-" + table.sqlName.toLowerCase() + "-" + fop.field.sqlName.toLowerCase() + "-" + dialect() +".sql").println("");
		("The file can contain the new field update. The developer have car the correct casing in SQL statement.").println("");
		("Model name: " + table.name + " " + fop.field.name).println("");
		("Example: UPDATE " + table.sqlName + " SET NEW_" + fop.field.sqlName + " = " +  fop.previousField.sqlName + ";").println("");
		
} %]

[%for (fop in modifyTableOperation.modifyFieldOperations.select(m | m.fieldIsAltered())) { %]
--changeset generator:ALTER_TABLE_ALTER_COLUMN_[%= table.sqlName %]_[%=fop.field.sqlName%]#[%= version() %] logicalFilePath:[%= scriptName %] stripComments:true
-- [%= fop.field.name %] [%= fop.field.uuid %]
ALTER TABLE [%= table.sqlName %] 
		[% if (dialect() == 'Oracle') { %]
			ADD (
		[% } %]
		[% if (dialect() == 'Oracle') { %]
			NEW_[%= fop.field.sqlName %] [%= fop.field.toFieldDefinition() %]
		[% } else { %]
			ADD COLUMN NEW_[%= fop.field.sqlName %] [%= fop.field.toFieldDefinition() %]
		[% } %]
		[% if (dialect() == 'Oracle') { %]
			)
		[% } %]
;[% out.println("\n"); %]

[%
		var inc : Template = TemplateFactory.load("migration/" + version() + "/migrate-field-" + table.sqlName.toLowerCase() + "-" + fop.field.sqlName.toLowerCase() + "-" + dialect() +".sql");
		inc.populate("modifyTableOperation", modifyTableOperation);
		inc.populate("table", modifyTableOperation.table);
		inc.populate("fieldOperation", fop);
		inc.populate("field", fop.field);
		inc.populate("version", version());

    	inc.populate("scriptName", scriptName);
    	inc.populate("failOnError",  failOnError);
		out.println(inc.process());
%]

ALTER TABLE [%= table.sqlName %] 
		[% if (dialect() == 'Oracle') { %]
			DROP (
		[% } %]

			[% if (dialect() == 'Oracle') { %]
				[%= fop.previousField.sqlName %]
			[% } else { %]
				DROP COLUMN [%= fop.previousField.sqlName %]
			[% } %]
					
		[% if (dialect() == 'Oracle') { %]
			)
		[% } %]
;[% out.println("\n"); %]

ALTER TABLE [%= table.sqlName %] RENAME COLUMN NEW_[%= fop.field.sqlName %] TO [%= fop.field.sqlName %];
[% out.println("\n"); %]

[% } %]

