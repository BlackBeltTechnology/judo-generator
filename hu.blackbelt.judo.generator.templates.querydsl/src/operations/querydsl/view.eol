@cached
operation QUERYDSL!QueryDslView getForeignKeys() : OrderedSet(QUERYDSL!QueryDslRelationIdentifierField) {
	return self.fields.select(field | field.isTypeOf(QUERYDSL!QueryDslRelationIdentifierField));
}

@cached
operation QUERYDSL!QueryDslView getInvKeys() : OrderedSet(QUERYDSL!QueryDslRelationIdentifierField) {
	/*return RDBMS!RdbmsViewRelationIdentifierField
				.all
				.select(field | field.view.primaryTable.table.includes(field.tableField.table) 
				or field.view.superTypes.collect(al | al.table).includes(field.tableField.table))
				.equivalent();*/
				
	return self.fields.select(field | field.isTypeOf(QUERYDSL!QueryDslInverseRelationIdentifierField));		
}

@cached
operation QUERYDSL!QueryDslView getNmKeys() : OrderedSet(QUERYDSL!QueryDslRelationIdentifierField) {
	return self.nmKeys;
}

@cached
operation QUERYDSL!QueryDslView getAllNmKeys() : OrderedSet(QUERYDSL!QueryDslRelationIdentifierField) {
	var all = self.getNmKeys().clone();
	
	if (self.class.supertype.isDefined()) {
		var superView = QUERYDSL!QueryDslView.all.selectOne(v | v.class == self.class.supertype);
		all.addAll(superView.getAllNmKeys());
	}
	return all; //.sortBy(a | a.name);
}

@cached
operation QUERYDSL!QueryDslView isViewOverriden() : Boolean {
	return OW!OverridenViews.all.selectOne(s | s.Name = self.sqlName).isDefined();
}

@cached
operation QUERYDSL!QueryDslView overridenName() : String {
	return "VS" + self.sqlName.substring(1);
}

@cached
operation QUERYDSL!QueryDslView tableName() : String {
	return "T" + self.sqlName.substring(1);
}



@cached
operation QUERYDSL!QueryDslClass allReferences () : Collection {
}
