operation JRoleToPermissions(jrole : PSM!JRole, package : PSM!JPackage, class : PSM!JClass) : Sequence(Permission!RelPermission) {
		var perms = new Sequence(Permission!RelPermission);
	
		var readPerm = new Permission!RelPermission();
		readPerm.hostClassName = package.name + "." + class.name;
		readPerm.resource = readPerm.hostClassName + "." + jrole.name;
		readPerm.otherType = jrole.opposite().ownerClass.package.name + "." + jrole.opposite().ownerClass.name;
		readPerm.hostClassUuid = class.uuid;
		readPerm.resourceUuid = readPerm.hostClassUuid + "@" + class.uuid + "." + jrole.name;
		readPerm.action = "read";
		readPerm.type = "relation";
		readPerm.uuid = generateUuid(generateUuid(readPerm.hostClassUuid, jrole.name, "."), "readPermission", "_");
		
		var writePerm = new Permission!RelPermission();
		writePerm.hostClassName = package.name + "." + class.name;
		writePerm.resource = writePerm.hostClassName + "." + jrole.name;
		writePerm.otherType = jrole.opposite().ownerClass.package.name + "." + jrole.opposite().ownerClass.name;
		writePerm.hostClassUuid = class.uuid;
		writePerm.resourceUuid = writePerm.hostClassUuid + "@" + class.uuid + "." + jrole.name;
		writePerm.action = "write";
		writePerm.type = "relation";
		writePerm.uuid = generateUuid(generateUuid(writePerm.hostClassUuid, jrole.name, "."), "writePermission", "_");
		
		var attachPerm = new Permission!RelPermission();
		attachPerm.hostClassName = package.name + "." + class.name;
		attachPerm.resource = attachPerm.hostClassName + "." + jrole.name;
		attachPerm.otherType = jrole.opposite().ownerClass.package.name + "." + jrole.opposite().ownerClass.name;
		attachPerm.hostClassUuid = class.uuid;
		attachPerm.resourceUuid = attachPerm.hostClassUuid + "@" + class.uuid + "." + jrole.name;
		attachPerm.action = "attach";
		attachPerm.type = "relation";
		attachPerm.uuid = generateUuid(generateUuid(attachPerm.hostClassUuid, jrole.name, "."), "attachPermission", "_");
		
		var detachPerm = new Permission!RelPermission();
		detachPerm.hostClassName = package.name + "." + class.name;
		detachPerm.resource = detachPerm.hostClassName + "." + jrole.name;
		detachPerm.otherType = jrole.opposite().ownerClass.package.name + "." + jrole.opposite().ownerClass.name;
		detachPerm.hostClassUuid = class.uuid;
		detachPerm.resourceUuid = detachPerm.hostClassUuid + "@" + class.uuid + "." + jrole.name;
		detachPerm.action = "detach";
		detachPerm.type = "relation";
		detachPerm.uuid = generateUuid(generateUuid(detachPerm.hostClassUuid, jrole.name, "."), "detachPermission", "_");
		
		perms.add(readPerm);
		perms.add(writePerm);
		perms.add(attachPerm);
		perms.add(detachPerm);
		
		return perms;
} 