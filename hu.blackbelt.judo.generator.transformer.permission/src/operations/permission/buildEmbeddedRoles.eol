operation Permission!PermissionModel buildEmbeddedRoles(hostClassName : String, oppositeClasses : Sequence(String), enums : Sequence(String)) {
	var oppositeRoles : Sequence(Permission!Role) = Permission!Role.all.select(role | oppositeClasses.includes(role.name.replace("_read", "")));
	var hostRoles = Permission!Role.all.select(role | role.name = hostClassName + "_update" or role.name = hostClassName + "_create" 
		or role.name = hostClassName + "_manage" or role.name = hostClassName + "_full");
	
	for (role in hostRoles) {
		role.childrenRoles.addAll(oppositeRoles);
	}
	
	if (enums.size > 0) {
		var readRole = Permission!Role.all.select(role | role.name = hostClassName + "_read").first();
		var readEnumRoles = Permission!Role.all.select(role | enums.includes(role.name.replace("_read", "")));		
		readRole.childrenRoles.addAll(readEnumRoles);
	}
}