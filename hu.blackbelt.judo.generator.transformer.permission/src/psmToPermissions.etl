post {
	var permissionModel : Permission!PermissionModel = new Permission!PermissionModel;

	for (jclass in PSM!JClass.all) {
		if (jclass.package.participates(PSM!JLayer#OPERATION)) {
			var classPermissions : Sequence(Permission!Permission);
			var currentClass = jclass;
			while (true) {
				for (jattribute in currentClass.attributes) {
					classPermissions.addAll(jattribute.equivalent("JAttributeToPermissions"));
				}
				for (jrole in currentClass.roles) {
					if (jrole.navigable) {
						classPermissions.addAll(jrole.equivalent("JRoleToPermissions"));
					}
				}
				
				if (currentClass.superType.isDefined()) {
					currentClass = currentClass.superType;				
				} else {
					break;				
				}
			}
			
			for (joperation in class.operations) {
				classPermissions.add(joperation.equivalent("JOperationToPermissions"));
			}
			
			classPermissions.addAll(class.equivalent("JClassToPermissions"));
			
			permissionModel.permissions.addAll(classPermissions);
			permissionModel.roles.addAll(buildObjectRoles(classPermissions));
			permissionModel.roles.addAll(buildRelationRoles(classPermissions));
			permissionModel.roles.addAll(buildEmbeddedRoles(classPermissions));
		}
	}
}