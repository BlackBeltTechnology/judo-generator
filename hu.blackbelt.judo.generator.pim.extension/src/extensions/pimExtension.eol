import "../operations/importAll.eol";

var visibilityMap = Map {
	"public" = inpPIM!VisibilityKind#public,
	"protected" = inpPIM!VisibilityKind#protected
};

var ecoreUMLTypeMap = Map {
	"EString" = inpPIM!Type.all.selectOne(type | type.name = "String"),
	"EBoolean" = inpPIM!Type.all.selectOne(type | type.name = "Boolean"),
	"EFloat" = inpPIM!Type.all.selectOne(type | type.name = "Float")
	//"Date" = inpPIM!Type.all.selectOne(type | type.name = "date")
	//"DateTime" = inpPIM!Type.all.selectOne(type | type.name = "datetime")
};

var associationList = new Map<String, inpPIM!Asscoiation>();

var annotations : Sequence(pimEXT!EAnnotation) = pimEXT!EAnnotation.all.select(an | an.source = "Target" and an.eModelElement.isTypeOf(pimEXT!EClass));
for (annotation : pimEXT!EAnnotation in annotations) {

	var pimClassList = inpPIM!Class.all.select(c | c.name = annotation.details.get("name") or c.fqName() = annotation.details.get("name"));
	if (pimClassList.size() = 1) {
		var pimClass = pimClassList.first();
		var targetClass : pimEXT!EClass = annotation.eModelElement;
		
		transformClass(targetClass, pimClass, associationList);
	}
}

var extensionPackage : inpPIM!Package = new inpPIM!Package();
extensionPackage.name = "extension";

var mainModel : inpPIM!Model = inpPIM!Model.all.selectOne(mod | mod.nestingPackage.isUndefined());
mainModel.packagedElement.add(extensionPackage);

annotations = pimEXT!EAnnotation.all.select(an | an.source = "Addition" and an.eModelElement.isTypeOf(pimEXT!EPackage));
for (annotation : pimEXT!EAnnotation in annotations) {
	var currentExtPackage : pimEXT!EPackage = annotation.eModelElement;

	var newPackage = new inpPIM!Package();
	newPackage.name = currentExtPackage.name;
	extensionPackage.packagedElement.add(newPackage);
	
	for (classifier : pimEXT!EClassifier in currentExtPackage.eClassifiers) {
	
		if (classifier.isTypeOf(pimEXT!EClass)) {
			
			var pimClass = new inpPIM!Class();
			pimClass.name = classifier.name;
			pimClass.isAbstract = classifier.abstract;
			
			newPackage.packagedElement.add(pimClass);
			
			var classAnnotation = classifier.eAnnotations.first();
			switch(classAnnotation.source) {
				case "Addition" : transformClass(classifier, pimClass, associationList);
				case "MenuRoot" : "";
				case "MenuItem" : "";
				case "Screen" : "";
			}
						
		} else if (classifier.isTypeOf(pimEXT!EEnum)) {
			var newEnum = new inpPIM!Enumeration();
			transformEnum(classifier, newEnum);
			
			newPackage.packagedElement.add(newEnum);
		}
	}
}






