
operation voidType () : JAVA!JvmType {
	return JAVATYPES!JvmType.all.select( t | t.name = "Void").first();
}

operation intType () : JAVA!JvmType {
	return JAVATYPES!JvmType.all.select( t | t.name = "Integer").first();
}

operation stringType () : JAVA!JvmType {
	return JAVATYPES!JvmType.all.select( t | t.name = "String").first();
}

operation longType () : JAVA!JvmType {
	return JAVATYPES!JvmType.all.select( t | t.name = "Long").first();
}

operation idType () : JAVA!JvmType {
	return JAVATYPES!JvmType.all.select( t | t.useForJudoId).first();
}

operation urlType () : JAVA!JvmType {
    return  JAVATYPES!JvmType.all.select( t | t.name = "URL").first();
}

operation generateUuid(namespace : String, name : String, separator : String) : String {
	return namespace + separator + name;
}

operation createJvmList ( componentType : JAVA!JvmType) : JAVA!JvmList {
	var ret = JAVA!JvmList.all.select(l | l.componentType.uuid = componentType.uuid).first();
	if (ret.isUndefined()) {
		ret = new JAVA!JvmList;
		ret.uuid = generateUuid(componentType.uuid, "list", "_");
		ret.name = "List";	
		ret.package = JAVA!JvmModel.all.first().findOrCreateJavaUtilPackage();
		ret.componentType = componentType;
	}
	return ret;
}

operation checkAllUuidsForDuplicateOrMissing() {
	var duplicated :Boolean = false;
	var undefined :Boolean = false;
	
	var agg : Map = new Map;

	for (uuid in JAVA!JvmElement.all.collect(e | e.uuid)) {
		if (uuid.isUndefined()) {
			"UNDEFINED UUID FOUND".println();
			undefined = true;
		} else {
			if (agg.containsKey(uuid)) {
				uuid.println("DUPLICATE: ");
				duplicated = true;
			} else {
				agg.put(uuid, 1);
			}
		}
	}
	
	if (duplicated) {
		throw "DUPLICATED UUID!";
	}
	
	if (undefined) {
		throw "UNDEFINED UUID!";
	}
}