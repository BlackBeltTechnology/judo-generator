
operation voidType () : JAVA!JvmType {
	return JAVATYPES!JvmType.all.select( t | t.name = "Void").first();
}

operation intType () : JAVA!JvmType {
	return JAVATYPES!JvmType.all.select( t | t.name = "Integer").first();
}

operation stringType () : JAVA!JvmType {
	return JAVATYPES!JvmType.all.select( t | t.name = "String").first();
}

operation longType () : JAVA!JvmType {
	return JAVATYPES!JvmType.all.select( t | t.name = "Long").first();
}

operation idType () : JAVA!JvmType {
	return JAVATYPES!JvmType.all.select( t | t.useForJudoId).first();
}

operation urlType () : JAVA!JvmType {
    return  JAVATYPES!JvmType.all.select( t | t.name = "URL").first();
}

operation generateUuid(namespace : String, name : String, separator : String) : String {
	return namespace + separator + name;
}

operation createJvmList ( componentType : JAVA!JvmType) : JAVA!JvmList {
	var ret = JAVA!JvmList.all.select(l | l.componentType.uuid = componentType.uuid).first();
	if (ret.isUndefined()) {
		ret = new JAVA!JvmList;
		ret.uuid = generateUuid(componentType.uuid, "list", "_");
		ret.name = "List";	
		ret.package = JAVA!JvmModel.all.first().findOrCreateJavaUtilPackage();
		ret.componentType = componentType;
	}
	return ret;
}

operation checkAllUuidsForDuplicateOrMissing() {
	var all = JAVA!JvmElement.all.collect(e | e.uuid);
	var set = all.asSet();

	var duplicated : Boolean = false;

	set.size.println("SET: ");
	all.size.println("ALL: ");

	for (uuid in set) {
		if (all.count(uuid) > 1) {
			duplicated = true;
			uuid.println("DUPLICATE: ");
		}
	}
	
	JAVA!JvmElement.all.select(e | e.uuid.isUndefined()).println("UNDEFINED: ");
	
	if (duplicated) {
		throw "Duplicated ID!";
	}
}