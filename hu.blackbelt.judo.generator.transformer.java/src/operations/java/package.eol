operation JAVA!JvmPackage findOrCreateChild (name : String) : JAVA!JvmPackage {
	return self.findOrCreateChildRecursively(name);
}

operation JAVA!JvmPackage findOrCreateChildRecursively (packageName : String) : JAVA!JvmPackage {
	return self.findOrCreateChildRecursively(packageName.split("\\."));
}

operation JAVA!JvmPackage findOrCreateChildRecursively (packageNames : Sequence) : JAVA!JvmPackage {
	var currentPackage = self;
	for (packName in packageNames) {
		var candidate = currentPackage.contents.select(p | (p.name = packName and p.package.uuid = currentPackage.uuid)).first();
		if (candidate.isUndefined()) {
			candidate = new JAVA!JvmPackage;
			candidate.name = packName;
			candidate.uuid = generateUuid(currentPackage.uuid, packName, ".");
			candidate.package = currentPackage;
			candidate.framework = self.framework;
		}
		currentPackage = candidate;
	}
	return currentPackage;
}

@cached
operation JAVA!JvmPackage classes () : Collection {
	return self.contents.select(c : JAVA!JvmClass | true);
}

@cached
operation JAVA!JvmPackage ownerModel () : JAVA!JvmModel {
	if (self.ownerModel.isDefined()) {
		return self.ownerModel;
	} else if (self.package.isDefined()) {
		return self.package.ownerModel();
	}
}

