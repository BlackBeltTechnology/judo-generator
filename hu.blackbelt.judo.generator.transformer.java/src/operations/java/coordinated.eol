@cached
operation JAVA!JvmCoordinated dto () : JAVA!JvmCoordinated {
    return self.find(JAVA!JvmJudoCoordinate#DTO);
}

@cached
operation JAVA!JvmCoordinated restDto () : JAVA!JvmCoordinated {
    return self.find(JAVA!JvmJudoCoordinate#REST_DTO);
}

@cached
operation JAVA!JvmCoordinated filterRestDto () : JAVA!JvmCoordinated {
    return self.find(JAVA!JvmJudoCoordinate#FILTER_REST_DTO);
}

@cached
operation JAVA!JvmCoordinated po () : JAVA!JvmCoordinated {
	return self.find(JAVA!JvmJudoCoordinate#PO);
}

@cached
operation JAVA!JvmCoordinated bo () : JAVA!JvmCoordinated {
	return self.find(JAVA!JvmJudoCoordinate#BO);
}

@cached
operation JAVA!JvmCoordinated boInterface () : JAVA!JvmCoordinated {
	return self.find(JAVA!JvmJudoCoordinate#BO_INTERFACE);
}

@cached
operation JAVA!JvmCoordinated boBuilder () : JAVA!JvmCoordinated {
	return self.find(JAVA!JvmJudoCoordinate#BO_BUILDER);
}

@cached
operation JAVA!JvmCoordinated boBuilderInterface () : JAVA!JvmCoordinated {
	return self.find(JAVA!JvmJudoCoordinate#BO_BUILDER_INTERFACE);
}

@cached
operation JAVA!JvmCoordinated bql () : JAVA!JvmCoordinated {
	return self.find(JAVA!JvmJudoCoordinate#BO_BQL);
}

@cached
operation JAVA!JvmCoordinated bqlInterface () : JAVA!JvmCoordinated {
	return self.find(JAVA!JvmJudoCoordinate#BO_BQL_INTERFACE);
}

@cached
operation JAVA!JvmCoordinated daoMinimal () : JAVA!JvmCoordinated {
	return self.find(JAVA!JvmJudoCoordinate#DAO_MINIMAL);
}

@cached
operation JAVA!JvmCoordinated daoQClass () : JAVA!JvmCoordinated {
	return self.find(JAVA!JvmJudoCoordinate#DAO_Q_CLASS);
}

@cached
operation JAVA!JvmCoordinated boServiceInterface () : JAVA!JvmCoordinated {
	return self.find(JAVA!JvmJudoCoordinate#BO_SERVICE_INTERFACE);
}

@cached
operation JAVA!JvmCoordinated boServiceDefault () : JAVA!JvmCoordinated {
	return self.find(JAVA!JvmJudoCoordinate#BO_SERVICE_DEFAULT);
}

@cached
operation JAVA!JvmCoordinated boServiceAbstract () : JAVA!JvmCoordinated {
	return self.find(JAVA!JvmJudoCoordinate#BO_SERVICE_ABSTRACT);
}

@cached
operation JAVA!JvmCoordinated origin() : JAVA!JvmCoordinated {
	var ret = JCLASSUUID_TO_ORIGIN.get(self.uuid);
	if (ret.isUndefined()) {
		if (self.coordinate == JAVA!JvmJudoCoordinate#ORIGIN) {
			ret = self;
		} else {
			ret = self.origin;
		}
		JCLASSUUID_TO_ORIGIN.put(self.uuid, ret);
	}
	return ret;
}

operation JAVA!JvmCoordinated find (jvmJudoCoordinate : Any) : JAVA!JvmCoordinated {
	var origUUID = self.origin().uuid;
	var coordMap : Map = ORIGINUUIDS_TO_COORDINATE_TO_JCLASS.get(origUUID);
	if (coordMap.isUndefined()) {
		coordMap = Map{};
		ORIGINUUIDS_TO_COORDINATE_TO_JCLASS.put(origUUID, coordMap);
	}
	var ret = coordMap.get(jvmJudoCoordinate);
	if (ret.isUndefined()) {
		ret =  JAVA!JvmCoordinated.all.select(c | (c.coordinate = jvmJudoCoordinate and c.origin().uuid = origUUID)).first();
		coordMap.put(jvmJudoCoordinate, ret);
	}
	
	return ret;
}