import "modules/element.etl";
import "modules/model.etl";
import "modules/package.etl";
import "modules/class.etl";
import "modules/role.etl";
import "modules/enumeration.etl";
import "modules/operation.etl";
import "modules/attribute.etl";
import "modules/parameter.etl";
import "modules/stateMachine.etl";

import "pre/modifyVoidBusinessMethodsToReturnDeclaringClass.eol";

import "post/addHuBlackbeltPackages.eol";
import "post/addGuardMethodsAndEnum.eol";
import "post/addPackageBasedAndSingleClasses.eol";
import "post/addAndModifyMethods.eol";
import "post/modifyReferenceTypeToInterfaceForFrameworkEntities.eol";

pre {
	var PACKAGE_NAME = "key_package_name";
	var NAME_SUFFIX = "key_name_suffix";
	var NAME_PREFIX = "key_name_prefix";
	var COORDINATE_GROUP = "COORDINATE_GROUP";
	var COORDINATES = Map{
			JAVA!JvmJudoCoordinate#ORIGIN = Map{PACKAGE_NAME = "", NAME_PREFIX = "", NAME_SUFFIX = "", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#ORIGIN},
			JAVA!JvmJudoCoordinate#BO = Map{PACKAGE_NAME = "business.bo", NAME_PREFIX = "", NAME_SUFFIX = "", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO},
			JAVA!JvmJudoCoordinate#PO = Map{PACKAGE_NAME = "business.po", NAME_PREFIX = "", NAME_SUFFIX = "Po", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#PO},
			JAVA!JvmJudoCoordinate#BO_BQL = Map{PACKAGE_NAME = "business.bo", NAME_PREFIX = "", NAME_SUFFIX = "Bql", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO},
			JAVA!JvmJudoCoordinate#BO_ENUM = Map{PACKAGE_NAME = "business.bo", NAME_PREFIX = "", NAME_SUFFIX = "", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO},
			JAVA!JvmJudoCoordinate#PO_ENUM = Map{PACKAGE_NAME = "business.po", NAME_PREFIX = "", NAME_SUFFIX = "Po", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#PO},
			JAVA!JvmJudoCoordinate#BO_BUILDER = Map{PACKAGE_NAME = "business.bo", NAME_PREFIX = "", NAME_SUFFIX = "Builder", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO},
			JAVA!JvmJudoCoordinate#BO_FACTORY = Map{PACKAGE_NAME = "business.bo.factory", NAME_PREFIX = "", NAME_SUFFIX = "FactoryRegular", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO},
			JAVA!JvmJudoCoordinate#BO_ENUM_SERVICE = Map{PACKAGE_NAME = "business.service.regular", NAME_PREFIX = "", NAME_SUFFIX = "EnumService", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO},
			JAVA!JvmJudoCoordinate#BO_SERVICE_INTERFACE = Map{PACKAGE_NAME = "business.service", NAME_PREFIX = "", NAME_SUFFIX = "Service", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO},
			JAVA!JvmJudoCoordinate#BO_FRAMEWORK_SERVICE_INTERFACE = Map{PACKAGE_NAME = "api.service", NAME_PREFIX = "", NAME_SUFFIX = "Service", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO},
			JAVA!JvmJudoCoordinate#BO_SERVICE_ABSTRACT = Map{PACKAGE_NAME = "business.service.regular", NAME_PREFIX = "Abstract", NAME_SUFFIX = "Service", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO},
			JAVA!JvmJudoCoordinate#BO_SERVICE_DEFAULT = Map{PACKAGE_NAME = "business.service.regular", NAME_PREFIX = "Default", NAME_SUFFIX = "Service", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO},
			JAVA!JvmJudoCoordinate#BO_FRAMEWORK_SERVICE_DEFAULT = Map{PACKAGE_NAME = "api.service.regular", NAME_PREFIX = "Default", NAME_SUFFIX = "Service", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO},
			JAVA!JvmJudoCoordinate#BO_SERVICE_WRAPPER = Map{PACKAGE_NAME = "business.service.regular", NAME_PREFIX = "Wrapper", NAME_SUFFIX = "Service", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO},
			JAVA!JvmJudoCoordinate#BO_FRAMEWORK_SERVICE_WRAPPER = Map{PACKAGE_NAME = "api.service.regular", NAME_PREFIX = "Wrapper", NAME_SUFFIX = "Service", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO},		
			JAVA!JvmJudoCoordinate#DAO_MINIMAL = Map{PACKAGE_NAME = "business.dao.minimal", NAME_PREFIX = "Minimal", NAME_SUFFIX = "Dao", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO},
			JAVA!JvmJudoCoordinate#DAO_Q_CLASS = Map{PACKAGE_NAME = "querydsl", NAME_PREFIX = "Q", NAME_SUFFIX = "", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO},
			JAVA!JvmJudoCoordinate#DAO_QUERY_DSL = Map{PACKAGE_NAME = "business.dao.minimal.querydsl", NAME_PREFIX = "QueryDslMinimal", NAME_SUFFIX = "Dao", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO},
			JAVA!JvmJudoCoordinate#BO_INTERFACE = Map{PACKAGE_NAME = "api.entity", NAME_PREFIX = "", NAME_SUFFIX = "", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO_INTERFACE},
			JAVA!JvmJudoCoordinate#BO_BUILDER_INTERFACE = Map{PACKAGE_NAME = "api.builder", NAME_PREFIX = "", NAME_SUFFIX = "Builder", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO_INTERFACE},
			JAVA!JvmJudoCoordinate#BO_BQL_FRAMEWORK = Map{PACKAGE_NAME = "api.bql", NAME_PREFIX = "", NAME_SUFFIX = "Bql", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO_INTERFACE},
			JAVA!JvmJudoCoordinate#BO_FACTORY_INTERFACE = Map{PACKAGE_NAME = "api.factory", NAME_PREFIX = "", NAME_SUFFIX = "Factory", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#BO_INTERFACE},
			JAVA!JvmJudoCoordinate#DTO = Map{PACKAGE_NAME = "api.dto", NAME_PREFIX = "", NAME_SUFFIX = "Dto", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#DTO},
			JAVA!JvmJudoCoordinate#DTO_BUILDER = Map{PACKAGE_NAME = "api.dto", NAME_PREFIX = "", NAME_SUFFIX = "DtoBuilder", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#DTO},
			JAVA!JvmJudoCoordinate#DTO_ENUM = Map{PACKAGE_NAME = "api.dto", NAME_PREFIX = "", NAME_SUFFIX = "Dto", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#DTO},
			JAVA!JvmJudoCoordinate#DTO_OPERATION = Map{PACKAGE_NAME = "api.operation", NAME_PREFIX = "", NAME_SUFFIX = "Operation", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#DTO},
            JAVA!JvmJudoCoordinate#DTO_ACCESSOR = Map{PACKAGE_NAME = "api.dto", NAME_PREFIX = "", NAME_SUFFIX = "DtoAccessor", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#DTO},
            JAVA!JvmJudoCoordinate#DTO_OPERATION_IMPL = Map{PACKAGE_NAME = "business.operation", NAME_PREFIX = "Default", NAME_SUFFIX = "Operation", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#DTO},
			JAVA!JvmJudoCoordinate#REST_DTO = Map{PACKAGE_NAME = "rest.dto", NAME_PREFIX = "", NAME_SUFFIX = "RestDto", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#REST_DTO},
			JAVA!JvmJudoCoordinate#REST_DTO_BUILDER = Map{PACKAGE_NAME = "rest.dto", NAME_PREFIX = "", NAME_SUFFIX = "RestDtoBuilder", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#REST_DTO},
			JAVA!JvmJudoCoordinate#REST_DTO_ENUM = Map{PACKAGE_NAME = "rest.dto", NAME_PREFIX = "", NAME_SUFFIX = "RestDto", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#REST_DTO},
			JAVA!JvmJudoCoordinate#REST_OPERATION = Map{PACKAGE_NAME = "rest", NAME_PREFIX = "", NAME_SUFFIX = "RestOperation", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#REST_DTO},
            JAVA!JvmJudoCoordinate#REST_OPERATION_IMPL = Map{PACKAGE_NAME = "rest.regular", NAME_PREFIX = "Default", NAME_SUFFIX = "RestOperation", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#REST_DTO},
			JAVA!JvmJudoCoordinate#FILTER_REST_DTO = Map{PACKAGE_NAME = "rest.dto", NAME_PREFIX = "", NAME_SUFFIX = "FilterRestDto", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#REST_DTO},
			JAVA!JvmJudoCoordinate#ABSTRACT_REST_TEST_CLIENT = Map{PACKAGE_NAME = "rest.clients", NAME_PREFIX = "Abstract", NAME_SUFFIX = "Client", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#ABSTRACT_REST_TEST_CLIENT},
			JAVA!JvmJudoCoordinate#REST_TEST_CLIENT = Map{PACKAGE_NAME = "rest.clients", NAME_PREFIX = "", NAME_SUFFIX = "Client", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#REST_TEST_CLIENT},
			JAVA!JvmJudoCoordinate#REST_TEST_WRAPPER_C = Map{PACKAGE_NAME = "rest.dto", NAME_PREFIX = "C", NAME_SUFFIX = "", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#REST_TEST_WRAPPER_C},
			JAVA!JvmJudoCoordinate#REST_TEST_WRAPPER_T = Map{PACKAGE_NAME = "rest.dto", NAME_PREFIX = "T", NAME_SUFFIX = "", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#REST_TEST_WRAPPER_T},
			JAVA!JvmJudoCoordinate#REST_TEST_WRAPPER_S = Map{PACKAGE_NAME = "rest.dto", NAME_PREFIX = "S", NAME_SUFFIX = "", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#REST_TEST_WRAPPER_S},
			JAVA!JvmJudoCoordinate#REST_TEST_WRAPPER_M = Map{PACKAGE_NAME = "rest.dto", NAME_PREFIX = "M", NAME_SUFFIX = "", COORDINATE_GROUP=JAVA!JvmJudoCoordinate#REST_TEST_WRAPPER_M}
		};

	modifyVoidBusinessMethodsToReturnDeclaringClass();
}

post {
	
	repairScrewedUpReferenceOppositeType();
	hacklongtoPOId();
	
	addGuardMethodsAndEnum();
	addPackageBasedClasses();
	addAndModifyMethods();
	addHuBlackbeltPackages();
	addSingleClasses();
	modifyReferenceTypeToInterfaceForFrameworkEntities();
	
	//HACK - repairs broken uuids
	for (attr in JAVA!JvmAttribute.all) {
		attr.uuid = generateUuid(attr.ownerClass.uuid, attr.name, ".");
	}
	
	var all = JAVA!JvmElement.all.collect(e | e.uuid);
	var set = all.asSet();

	set.size.println("SET: ");
	all.size.println("ALL: ");

	for (uuid in set) {
		if (all.count(uuid) > 1) {
			uuid.println("DUPLICATE: ");
		}
	}
	
	JAVA!JvmElement.all.select(e | e.uuid.isUndefined()).println("UNDEFINED: ");
}

operation hacklongtoPOId () : Any {
	for (attr in JAVA!JvmAttribute.all.select(r | r.name = "id" and r.ownerClass.coordinate = JAVA!JvmJudoCoordinate#PO)) { 
		attr.type = longType();
	}
}

operation repairScrewedUpReferenceOppositeType () : Any {
	for (ref in JAVA!JvmReference.all.select(r | r.type.uuid = voidType().uuid)) { 
		if (ref.upper = -1) {
			ref.type = createJvmList(ref.opposite.ownerClass);  
		} else {
			ref.type = ref.opposite.ownerClass;
		}
	}
	
}