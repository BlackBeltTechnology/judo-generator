import "../../../operations/_importAll.eol";
import "element.etl";

@primary
rule JEnumeration 
	transform s : PSM!JEnumeration
	to t : JAVA!JvmEnum
	extends JElement {
		t.coordinate = JAVA!JvmJudoCoordinate#ORIGIN;
		t.package ::= s.package;
		t.classRepresentation ::= s.classRepresentation;
}

rule PoEnum 
	transform s : PSM!JEnumeration
	to t : JAVA!JvmEnum
	extends JElement {
	guard : s.participates(PSM!JLayer#PERSISTENCE)
		t.package ::= s.package;
		t.fillFrom(s, JAVA!JvmJudoCoordinate#PO_ENUM);
		t.classRepresentation = s.classRepresentation.equivalent("PoClass");
}

rule BoEnum 
	transform s : PSM!JEnumeration
	to t : JAVA!JvmEnum
	extends JElement {
	guard : s.participates(PSM!JLayer#SERVICE)
		t.package ::= s.package;
		t.fillFrom(s, JAVA!JvmJudoCoordinate#BO_ENUM);
		t.classRepresentation = s.classRepresentation.equivalent("BoClass");
}

rule DtoEnum
    transform s : PSM!JEnumeration
    to t : JAVA!JvmEnum
    extends JElement {
    guard : s.participates(PSM!JLayer#OPERATION)
        t.package ::= s.package;
        t.fillFrom(s, JAVA!JvmJudoCoordinate#DTO_ENUM);
        t.classRepresentation = s.classRepresentation.equivalent("DtoClass");
}

rule RestDtoEnum
    transform s : PSM!JEnumeration
    to t : JAVA!JvmEnum
    extends JElement {
    guard : s.participates(PSM!JLayer#REST)
        t.package ::= s.package;
        t.fillFrom(s, JAVA!JvmJudoCoordinate#REST_DTO_ENUM);
        t.classRepresentation = s.classRepresentation.equivalent("RestDtoClass");
}

rule JLiteral 
	transform s : PSM!JLiteral
	to t : JAVA!JvmLiteral 
	extends JElement {
		t.ownerEnum ::= s.enumeration;
}

operation JAVA!JvmEnum fillFrom (source : PSM!JEnumeration, jvmJudoCoordinate : Any) : Any {
	self.coordinate = jvmJudoCoordinate;
	var cMap = COORDINATES.get(self.coordinate);
	var suffix = cMap.get(NAME_SUFFIX);
	self.uuid = uuid3(source.uuid, jvmJudoCoordinate.name + suffix);
	if (not self.name.endsWith("Enum")) {
		self.name = source.name + "Enum" + suffix;
	} else {
		self.name = source.name + suffix;
	}	
	self.origin = source.equivalent("JEnumeration");
	var p = self.package.findOrCreateChild(cMap.get(PACKAGE_NAME));
	self.package = p;
}
