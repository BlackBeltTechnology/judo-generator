import "modules/type.etl";
import "modules/uiclass.etl";	
import "modules/uibase.etl";
import "modules/uicomponenttype.etl";
import "modules/uimodule.etl";
import "modules/uifilter.etl";
import "modules/uimenuitem.etl";



post {

	if (UI!UIMenuItem.all.size = 0) {
		var mainMenu = UI!UIBase.all.first().mainMenu;
		for (package in PSM!JPackage.all) {
			if (package.participates(PSM!JLayer#OPERATION)) {
				var menuItem = new UI!UIMenuItem();
				menuItem.uuid = package.uuid + "_menuitem";
				menuItem.name = package.name;
				
				for (class in package.classes) {
					var classMenuItem = new UI!UIMenuItem();
					classMenuItem.uuid = class.uuid + "_menuitem";
					classMenuItem.name = class.name;
					classMenuItem.menuView = class.equivalent("UIClass").selector;
					
					menuItem.menuItems.add(classMenuItem); 
				}
				
				mainMenu.menuItems.add(menuItem);
			}
		}
	} else {
	
		var loneMenuItems = UI!UIMenuItem.all.select(item | not item.ownerMenuItem.isDefined() and item.uuid <> "main_menu");
		var mainMenu = UI!UIMenuItem.all.select(item | item.uuid = "main_menu").first();
		
		mainMenu.menuItems.addAll(loneMenuItems);
	}
	
	for (class in UI!UIClass.all) {
		var childClassViews : Sequence(UI!UIView) = new Sequence(UI!UIView);
		
		while (true) {
			if (class.super.isDefined()) {
				if (not class.`abstract`) {
					for (classView in class.classViews) {
						if (classView.uuid.endsWith("_oview_default")) {
							childClassViews.add(classView);
						}
					}
				}
				
				
				class.super.childClassViews.addAll(childClassViews);
				class = class.super;
			} else {
				break;
			}
		}
	}
	
	for (filter in PSM!JUIFilter) {
		filter.equivalent("UIFilter").attribute = filter.attribute.equivalent("UIBaseComponentType").uuid;
	}
	
	
	//Use it to check if all Uuids are unique
	//Impacts performance
	
	checkAllUuidsForDuplicateOrMissing();
}


