<?xml version="1.0" encoding="UTF-8"?>
<project default="main">

	<property name="model.file.extension" value="model" />

	<property name="root.dir" location="." />
	<property name="_src.dir" location="${root.dir}/src" />
	<property name="target.dir.name" value="target-ant" />
	<property name="target.dir" location="${target.dir.name}" />

	<property name="meta.psm.project.dir" location="../hu.blackbelt.judo.generator.meta.psm" />
	<property name="psm.model.project.dir" location="../hu.blackbelt.judo.generator.transformer.psm" />
	<property name="third.party.project.dir" location="../hu.blackbelt.judo.generator.third.party" />

	<path id="ant.taskdef.classpath">
		<fileset dir="${third.party.project.dir}/lib/ant" includes="**/*.jar" />
	</path>
	
	<taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="ant.taskdef.classpath" />
	<taskdef resource="org/eclipse/epsilon/workflow/tasks/tasks.xml" classpathref="ant.taskdef.classpath" loaderref="epsilon.loader" />
	<taskdef resource="org/eclipse/epsilon/workflow/tasks/emf/tasks.xml"  loaderref="epsilon.loader" />

	<property name="model.src.dir" location="${_src.dir}/model" />
	<property name="templates.dir" location="${_src.dir}/templates" />
	<property name="transformations.dir" location="${_src.dir}/transformations" />
	<property name="validations.dir" location="${_src.dir}/validations" />
	<property name="generators.dir" location="${_src.dir}/generators" />

	<property name="transformed.dir" location="${target.dir}/resources" />

	<property name="psm.library.dir" location="${meta.psm.project.dir}/library" />	
	
	<!-- PSM Model definitions -->
	<property name="psm.model.name" value="PSM" />
	<property name="psm.model.file.name" value="test_opm" />
	<property name="psm.model.location" location="${psm.model.project.dir}/target-ant/resources/${psm.model.file.name}.${model.file.extension}" />
	<property name="psm.meta.location" location="${meta.psm.project.dir}/model/psm.ecore" />
	<property name="psm.meta.uri" value="http://blackbelt.hu/judo/meta/psm" />

	<!-- PSM Types -->
	<property name="psmtypes.model.name" value="PSMTYPES" />
	<property name="psmtypes.model.location" location="${psm.library.dir}/psmTypes.model" />

	<!-- =========================== -->
	<!-- Project specific parameters -->
	<!-- =========================== -->	
	<property name="meta.psm.rdbms.project.dir" location="../hu.blackbelt.judo.generator.meta.psm.rdbms" />
	<property name="rdbms.psm.library.dir" location="${meta.psm.rdbms.project.dir}/library" />
	<property name="gen.dir" location="${target.dir}/rdbms" />
	<property name="readRdbmsPsmModel" value="false"/>

	<!-- RDBMS Model -->
	<property name="rdbms.psm.model.name" value="RDBMS" />
	<property name="rdbms.psm.model.location" location="${transformed.dir}/rdbms_psm.model" />
	<property name="rdbms.psm.meta.location" location="${meta.psm.rdbms.project.dir}/model/rdbms.ecore" />
	<property name="rdbms.psm.meta.uri" value="http://blackbelt.hu/judo/meta/psm/rdbms" />

	<!-- RDBMS Types -->
	<property name="rdbmstypes.model.name" value="RDBMSTYPES" />
	<property name="rdbmstypes.model.location" location="${rdbms.psm.library.dir}/rdbmsTypes.model" />
	
	<!-- TypeMapping Model -->
	<property name="typemapping.rdbms.psm.model.name" value="RTM" />
	<property name="typemapping.rdbms.psm.model.location" location="${meta.psm.rdbms.project.dir}/library/typeMapping.model" />
	<property name="typemapping.rdbms.psm.meta.location" location="${meta.psm.rdbms.project.dir}/model/psmToRdbmsTypeMapping.ecore" />
	<property name="typemapping.rdbms.psm.meta.uri" value="http://blackbelt.hu/judo/meta/psm/rdbms/mapping" />

	<property name="rdbms.psm.transformation.entry" location="${transformations.dir}/rdbms/psmToRdbms.etl" />
	<property name="rdbms.psm.generation.entry" location="${generators.dir}/main.egl" />
	<property name="rdbmstypes.model.validation" location="${validations.dir}/validation.evl" />

	<property name="psm.meta.location" location="${meta.psm.project.dir}/model/psm.ecore" />
	<property name="transformed.model.name" value="transformedModelFromAnt.model" />

	<target name="prepare">
		<delete dir="${gen.dir}" failonerror="false" />
		<mkdir dir="${gen.dir}/rdbms" />
		<mkdir dir="${target.dir}" />
		<mkdir dir="${gen.dir}" />
		<mkdir dir="${transformed.dir}" />
		<delete file="${rdbms.psm.model.location}" failonerror="false" />
		<touch file="${rdbms.psm.model.location}" />
	</target>

	<target name="prepareForMaven">
		<mkdir dir="${transformed.dir}" />
		<delete file="${rdbms.psm.model.location}" failonerror="false" />
		<touch file="${rdbms.psm.model.location}" />
	</target>

	<target name="loadModels">
		<epsilon.emf.register file="${rdbms.psm.meta.location}" />
		<epsilon.emf.register file="${psm.meta.location}" />
		<epsilon.emf.register file="${typemapping.rdbms.psm.meta.location}" />
		<epsilon.emf.loadModel name="${psm.model.name}" modelfile="${psm.model.location}" metamodeluri="${psm.meta.uri}" read="true" store="false" expand="true" />
		<epsilon.emf.loadModel name="${rdbms.psm.model.name}" modelfile="${rdbms.psm.model.location}" metamodeluri="${rdbms.psm.meta.uri}" read="${readRdbmsPsmModel}" store="true" expand="true" />
		<epsilon.emf.loadModel name="${rdbmstypes.model.name}" modelfile="${rdbmstypes.model.location}" metamodeluri="${rdbms.psm.meta.uri}" />
		<epsilon.emf.loadModel name="${psmtypes.model.name}" modelfile="${psmtypes.model.location}" metamodeluri="${psm.meta.uri}" />
		<epsilon.emf.loadModel name="${typemapping.rdbms.psm.model.name}" modelfile="${typemapping.rdbms.psm.model.location}" metamodeluri="${typemapping.rdbms.psm.meta.uri}" expand="true" />
	</target>

	<target name="validate">
		<epsilon.evl src="${rdbmstypes.model.validation}">
			<model ref="${psm.model.name}" />
			<model ref="${rdbmstypes.model.name}" />
			<model ref="${psmtypes.model.name}" />
			<model ref="${typemapping.rdbms.psm.model.name}" />
		</epsilon.evl>
	</target>

	<target name="transform">
		<epsilon.etl src="${rdbms.psm.transformation.entry}">
			<model ref="${psm.model.name}" />
			<model ref="${rdbms.psm.model.name}" />
			<model ref="${rdbmstypes.model.name}" />
			<model ref="${psmtypes.model.name}" />
			<model ref="${typemapping.rdbms.psm.model.name}" />
		</epsilon.etl>
	</target>

	<target name="generate">
		<epsilon.egl src="${rdbms.psm.generation.entry}" outputRoot="${gen.dir}">
			<model ref="${rdbmstypes.model.name}" />	
			<model ref="${rdbms.psm.model.name}" />
		</epsilon.egl>
	</target>

	<target name="mainFromMaven" depends="prepareForMaven, loadModels, validate, transform, generate" />
	<target name="mainFromCommandLine" depends="prepare, loadModels, validate, transform, generate" />
	<target name="main" depends="doGenerate"/>
	<target name="pre" depends="prepare, loadModels, validate" />
	
	<target name="transformInTransaction" >
			<trycatch>
				<try>
					<epsilon.startTransaction name="TransforTransaction" />
					<runtarget target="transform" />
					<epsilon.commitTransaction name="TransforTransaction" />
				</try>
				<catch>
					<epsilon.rollbackTransaction name="TransforTransaction" />
				</catch>
			</trycatch>
		</target>

	<target name="doTransform" depends="pre, transformInTransaction" />

	<target name="doGenerate" depends="doTransform">
		<trycatch>
			<try>
				<epsilon.startTransaction name="GenerateTransaction" />
				<runtarget target="generate" />
				<epsilon.commitTransaction name="GenerateTransaction" />
			</try>
			<catch>
				<epsilon.rollbackTransaction name="GenerateTransaction" />
			</catch>
		</trycatch>
	</target>

</project>