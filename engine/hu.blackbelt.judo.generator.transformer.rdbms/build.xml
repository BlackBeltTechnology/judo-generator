<?xml version="1.0" encoding="UTF-8"?>
<project default="main">

	<property name="third.party.project.dir" location="../hu.blackbelt.judo.generator.third.party" />

	<!-- ANT Taskdefs for ant-contrib -->
<!--
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
	 <classpath>
	    <pathelement location="${third.party.project.dir}/lib/ant/contrib/ant-contrib.jar"/>
	  </classpath>
	</taskdef>
-->
	<property name="model.file.extension" value="model" />

	<property name="root.dir" location="." />
	<property name="_src.dir" location="${root.dir}/src" />
	<property name="target.dir.name" value="target-ant" />
	<property name="target.dir" location="${target.dir.name}" />

	<property name="meta.psm.project.dir" location="../hu.blackbelt.judo.generator.meta.psm" />
	<property name="psm.model.project.dir" location="../hu.blackbelt.judo.generator.transformer.psm" />

	<path id="ant.taskdef.classpath">
		<fileset dir="${third.party.project.dir}/lib/ant" includes="**/*.jar" />
	</path>
	
	<taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="ant.taskdef.classpath" />
	<taskdef resource="org/eclipse/epsilon/workflow/tasks/tasks.xml" classpathref="ant.taskdef.classpath" loaderref="epsilon.loader" />
	<taskdef resource="org/eclipse/epsilon/workflow/tasks/emf/tasks.xml"  loaderref="epsilon.loader" />

	<property name="model.src.dir" location="${_src.dir}/model" />
	<property name="templates.dir" location="${_src.dir}/templates" />
	<property name="transformations.dir" location="${_src.dir}/transformations" />
	<property name="validations.dir" location="${_src.dir}/validations" />

	<property name="transformed.dir" location="${target.dir}/resources" />

	<property name="psm.library.dir" location="${meta.psm.project.dir}/library" />	
	
	<!-- PSM Model definitions -->
	<property name="psm.model.name" value="PSM" />
	<property name="psm.model.file.name" value="test_opm" />
	<property name="psm.model.location" location="${psm.model.project.dir}/target-ant/resources/${psm.model.file.name}.${model.file.extension}" />
	<property name="psm.meta.location" location="${meta.psm.project.dir}/model/psm.ecore" />
	<property name="psm.meta.uri" value="http://blackbelt.hu/judo/meta/psm" />

	<!-- PSM Types -->
	<property name="psmtypes.model.name" value="PSMTYPES" />
	<property name="psmtypes.model.location" location="${psm.library.dir}/psmTypes.${model.file.extension}" />

	<!-- =========================== -->
	<!-- Project specific parameters -->
	<!-- =========================== -->	
	<property name="sqlDialects" value="Postgres"/>
	<property name="meta.psm.rdbms.project.dir" location="../hu.blackbelt.judo.generator.meta.psm.rdbms" />
	<property name="rdbms.psm.library.dir" location="${meta.psm.rdbms.project.dir}/library" />
	<property name="readRdbmsPsmModel" value="false"/>

	<!-- RDBMS Model -->
	<property name="rdbms.psm.model.name" value="RDBMS" />
	<property name="rdbms.psm.model.location.prefix" location="${transformed.dir}/rdbms_psm" />

	<property name="rdbms.psm.meta.location" location="${meta.psm.rdbms.project.dir}/model/rdbms.ecore" />
	<property name="rdbms.psm.meta.uri" value="http://blackbelt.hu/judo/meta/psm/rdbms" />

	<!-- RDBMS Types -->
	<property name="rdbmstypes.model.name" value="RDBMSTYPES" />
	<property name="rdbmstypes.model.location.prefix" location="${rdbms.psm.library.dir}/rdbmsTypes" />
	
	<!-- TypeMapping Model -->
	<property name="typemapping.rdbms.psm.model.name" value="RTM" />
	<property name="typemapping.rdbms.psm.model.location.prefix" location="${meta.psm.rdbms.project.dir}/library/typeMapping" />

	<property name="typemapping.rdbms.psm.meta.location" location="${meta.psm.rdbms.project.dir}/model/psmToRdbmsTypeMapping.ecore" />
	<property name="typemapping.rdbms.psm.meta.uri" value="http://blackbelt.hu/judo/meta/psm/rdbms/mapping" />

	<property name="rdbms.psm.transformation.entry" location="${transformations.dir}/rdbms/psmToRdbms.etl" />
	<property name="rdbmstypes.model.validation" location="${validations.dir}/validation.evl" />

	<property name="psm.meta.location" location="${meta.psm.project.dir}/model/psm.ecore" />

	
	<!-- TARGET DEFINITIONS -->
	<target name="prepare">
		<mkdir dir="${target.dir}" />
		<mkdir dir="${transformed.dir}" />
	</target>

	
	<target name="loadModels">
		<!-- 
		    <rdbmsFieldType href="platform:/resource/hu.blackbelt.judo.generator.meta.psm.rdbms/library/rdbmsTypesPostgres.model#_ewi48JxSEeeO26D_eQyRGQ"/>
    <psmType href="platform:/resource/hu.blackbelt.judo.generator.meta.psm/library/psmTypes.model#_Ts0b8PzUEeaBFPkGdGK2hw"/>
		
		-->
		
		<echo>EMF register: ${psm.meta.location}</echo>
		<epsilon.emf.register file="${psm.meta.location}" />
		<echo>EMF register: ${rdbms.psm.meta.location}</echo>
		<epsilon.emf.register file="${rdbms.psm.meta.location}" />
		<echo>EMF register: ${typemapping.rdbms.psm.meta.location}</echo>		
        <epsilon.emf.register file="${typemapping.rdbms.psm.meta.location}" />
		<echo>Load mode|: ${psm.model.name} ${psm.model.location} ${psm.meta.uri}</echo>
		<epsilon.emf.loadModel name="${psm.model.name}" modelfile="${psm.model.location}" metamodeluri="${psm.meta.uri}" read="true" store="false" expand="true" />
		<echo>Load mode|: ${rdbms.psm.model.name} ${rdbms.psm.model.location.prefix}${sqlDialect}.${model.file.extension} ${psm.meta.uri} ${rdbms.psm.meta.uri}</echo>
		<epsilon.emf.loadModel name="${rdbms.psm.model.name}" modelfile="${rdbms.psm.model.location.prefix}${sqlDialect}.${model.file.extension}" metamodeluri="${rdbms.psm.meta.uri}" store="true" read="${readRdbmsPsmModel}" expand="true" />
		<echo>Load mode|: ${rdbmstypes.model.name} ${rdbmstypes.model.location.prefix}${sqlDialect}.${model.file.extension} ${psm.meta.uri} ${rdbms.psm.meta.uri}</echo>
		<epsilon.emf.loadModel name="${rdbmstypes.model.name}" modelfile="${rdbmstypes.model.location.prefix}${sqlDialect}.${model.file.extension}" metamodeluri="${rdbms.psm.meta.uri}" aliases="platform:/resource/hu.blackbelt.judo.generator.meta.psm.rdbms/library/rdbmsTypes${sqlDialect}.${model.file.extension}" />
		<echo>Load mode|: ${psmtypes.model.name} ${psmtypes.model.location} ${psm.meta.uri} ${psm.meta.uri}</echo>
		<epsilon.emf.loadModel name="${psmtypes.model.name}" modelfile="${psmtypes.model.location}" metamodeluri="${psm.meta.uri}" aliases="platform:/resource/hu.blackbelt.judo.generator.meta.psm.rdbms/library/rdbmsTypesPostgres.model"/>
		<echo>Load mode|: ${typemapping.rdbms.psm.model.name} ${typemapping.rdbms.psm.model.location.prefix}${sqlDialect}.model ${psm.meta.uri} ${typemapping.rdbms.psm.meta.uri}</echo>
		<epsilon.emf.loadModel name="${typemapping.rdbms.psm.model.name}" modelfile="${typemapping.rdbms.psm.model.location.prefix}${sqlDialect}.model" metamodeluri="${typemapping.rdbms.psm.meta.uri}" expand="true" />
	</target>

	<target name="validate">
		<epsilon.evl src="${rdbmstypes.model.validation}">
			<model ref="${psm.model.name}" />
			<model ref="${rdbmstypes.model.name}" />
			<model ref="${psmtypes.model.name}" />
			<model ref="${typemapping.rdbms.psm.model.name}" />
		</epsilon.evl>
	</target>

	<target name="transform">
		<echo>Generating: ${rdbms.psm.model.name} - ${rdbms.psm.model.location.prefix}${sqlDialect}.${model.file.extension}</echo>
 		<echo>            ${rdbmstypes.model.name} - ${rdbmstypes.model.location.prefix}${sqlDialect}.${model.file.extension} - Meta: ${rdbms.psm.meta.uri}</echo>

		<epsilon.etl src="${rdbms.psm.transformation.entry}">
			<model ref="${psm.model.name}" />
			<model ref="${rdbms.psm.model.name}" />
			<model ref="${rdbmstypes.model.name}" />
			<model ref="${psmtypes.model.name}" />
			<model ref="${typemapping.rdbms.psm.model.name}" />
		</epsilon.etl>
		<!--<epsilon.emf.storeModel name="${rdbms.psm.model.name}"/>-->
	</target>

	<target name="dispose">
		<epsilon.disposeModels/>
	</target>

	<target name="mainFromMaven">
		<foreach list="${sqlDialects}" param="sqlDialect" target="mainFromMavenForDialect"/>
	</target>

	<target name="mainFromCommandLine">
		<foreach list="${sqlDialects}" param="sqlDialect" target="mainFromCommandLineForDialect"/>
	</target>

	<target name="main" depends="prepare">
		<foreach list="${sqlDialects}" param="sqlDialect" target="mainForDialect"/>
	</target>


	<!-- Dialect specific calls -->
	<target name="prepareForDialect">
		<delete file="${rdbms.psm.model.location.prefix}${sqlDialect}.${model.file.extension}" failonerror="false" />
		<touch file="${rdbms.psm.model.location.prefix}${sqlDialect}.${model.file.extension}" /> 
	</target>	
	
	<target name="mainFromMavenForDialect" depends="prepareForDialect, loadModels, validate, transform, dispose" />
	<target name="mainFromCommandLineForDialect" depends="prepareForDialect, loadModels, validate, transform, dispose" />
	<target name="mainForDialect" depends="prepareForDialect, loadModels, validate, transform, dispose"/>


</project>