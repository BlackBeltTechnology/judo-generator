operation voidType () : JAVA!JvmType {
    return JAVATYPES!JvmType.all.select( t | t.name = "Void").first();
}

operation randomUUID() : String {
	return UUIDUtils.randomUUID();
}

operation uuid3 (namespace : String, name : String) : String {
	return UUIDUtils.uuid3(namespace, name);
}

operation createJvmList ( componentType : JAVA!JvmType) : JAVA!JvmList {
    var ret = JAVA!JvmList.all.select(l | l.componentType.uuid = componentType.uuid).first();
    if (ret.isUndefined()) {
        ret = new JAVA!JvmList;
        ret.uuid = randomUUID();
        ret.name = "List";  
        ret.package = JAVA!JvmModel.all.first().findOrCreateJavaUtilPackage();
        ret.componentType = componentType;
    }
    return ret;
}

operation abbreviate(text : String, maxLength : Integer) : String {

    if (text.length() > maxLength) {
		var cns = text.substring(0,2) + text.substring(2).replace("a", "").replace("e","").replace("i", "").replace("o","").replace("u",""); 
		var pos = cns.length() - 2;
                
                
		while (cns.length() > maxLength) {
		   if (cns.substring(pos, pos + 1).matches("[a-z]")) {
		       cns = cns.substring(0, pos) + cns.substring(pos + 1);
		   } else if (cns.substring(pos, pos + 1).matches("[0-9]")){
               cns = cns.substring(0, pos-1) + cns.substring(pos, pos + 1).toLowerCase() + cns.substring(pos + 1);	    
           } else {
               cns = cns.substring(0, pos) + cns.substring(pos, pos + 1).toLowerCase() + cns.substring(pos + 1);
           }
		   pos = pos - 3;
		   if (pos < 2) {
		       pos = cns.length() - 2;
		   }
		}
               
		return cns.toLowerCase();
    } else {
        return text.toLowerCase();
    }
}