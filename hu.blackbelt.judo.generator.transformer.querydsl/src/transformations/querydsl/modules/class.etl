import "../../../operations/_importAll.eol";

rule JvmClassToQueryDslClass
    transform s : JAVA!JvmClass
    to t : QUERYDSL!QueryDslClass {
        guard : s.coordinate = JAVA!JvmJudoCoordinate#ORIGIN and not s.fwElement
            and s.rootPackage().ownerModel.isDefined() /*Skip dummy classes*/
            and s.fqName() <> "javax.ws.rs.core.Response" /*Skip Response class*/

        t.name = "Q" + s.name;
        t.uuid = uuid3(s.uuid, "Q");
        t.originUuid = s.uuid;
        t.originName = s.name;
        t.packageName = s.package.fqName();
        t.supertype = s.supertype.equivalent("JvmClassToQueryDslClass");
        t.view = RDBMS!RdbmsView.all.selectOne(rt | rt.originUuid = t.originUuid).equivalent("RdbmsViewToQueryDslView");
        targetModel.queryDslClasses.add(t);
        
        var uuidList : Sequence(String) = t.references.collect(reference | reference.originUuid);
        for (jvmRef in s.members.select(ref | ref.isTypeOf(JAVA!JvmReference))) {
        	if (uuidList.excludes(jvmRef.uuid)) {
        		var junctionReference = new QUERYDSL!QueryDslReference();
        		junctionReference.name = jvmRef.name;
        		junctionReference.originUuid = jvmRef.uuid;		
        		junctionReference.typeFqName = jvmRef.type.po().fqName();
        		junctionReference.lower = jvmRef.lower;
        		junctionReference.upper = jvmRef.upper;
        		junctionReference.options = jvmRef.optionScript;
        		
        		t.references.add(junctionReference);
        	}
        }
        
    }