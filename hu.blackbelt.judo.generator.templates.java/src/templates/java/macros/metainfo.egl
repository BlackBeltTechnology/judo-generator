[%
  import "../../../operations/_importAll.eol";
  import "../../../main.egl";
  
  var metaMultiplicity = Map{ -1 = "Meta.Multiplicity.Star", 0 = "Meta.Multiplicity.Zero", 1 = "Meta.Multiplicity.One"};
  var metaKind = Map{ JvmReferenceKind#ASSOCIATION = "Meta.Kind.Association", JvmReferenceKind#AGGREGATION = "Meta.Kind.Aggregation", JvmReferenceKind#COMPOSITION = "Meta.Kind.Composition"};
%]
@Meta(
		name = "[%=class.name%]",
        xmiid = "[%=class.origin.uuid%]",
        packageName = "[%=class.origin.package.name%]",
        entityInfo = "[%=class.origin.package.name.firstToUpperCase() + class.name %]",
        from = [%if (class.framework) {%][%=class.boInterface().fqName()%][%}else{%][%=class.bo().fqName()%][%}%].class,

        bql = [%=class.bql().fqName()%].class,

        tenant = [%=class.tenantMember%],
        framework = [%=class.framework%],
        technical = false,

        fields = {
        [%for (attr in class.allAttributes()) {%]
                @Field(
                        xmiid = "[%=class.origin.uuid%].[%=attr.name%]",
                        name = "[%=attr.name%]",
                        type = [%=attr.type.fqName()%].class,
                        mandatory = [%=attr.mandatory and not attr.derived %],
                        unique = [%=attr.unique%],
                        calculated = [%=attr.calculationScript.isDefined()%],
                        derived = [%=attr.derived%],
                        pimDerived = [%=attr.pimDerived%],
                        regexp = "[%=escapeJavaLiteral(attr.regexp)%]",
                        value = "[% if (attr.calculationScript.isDefined()) {%][%=escapeJavaLiteral(attr.calculationScript)%][%}else{%][%=escapeJavaLiteral(attr.defaultValueExpression)%][%}%]"
                )[%if (hasMore) {%][%=","%][%}%]
        [%}%]
        },
		[% if (onlyFramework) {%]
        relations = {
        [%for (ref in class.allReferences()) {%]
        	[% if (ref.ownerClass.framework and ref.opposite.ownerClass.framework) {%]
                @Relation(
                        thisEnd = @RelationEnd(
                                field = "[%=ref.name%]",
                                xmiid = "[%=class.origin.uuid%].[%=ref.name%]",
                                collection = [%=ref.type.isCollection()%],
                                type = [%if (ref.framework) {%][%=ref.type.bare().boInterface().fqName()%][%}else{%][%=ref.type.bare().bo().fqName()%][%}%].class,
                                kind = [%=metaKind.get(ref.kind)%],
                                minimum = [%=metaMultiplicity.get(ref.lower)%],
                                maximum = [%=metaMultiplicity.get(ref.upper)%],
                                navigable = [%=ref.navigable%],
                                script = "[% if (ref.derived) {%][%=ref.virtualExpressionScript%][%}%]",
                                description = "[%if (ref.derivedDescription.isDefined()) {%][%=ref.derivedDescription%][%}%]",
                                derived = [%=ref.derived%],
                                pimDerived = [%=ref.pimDerived%],
                                options = "[% if (ref.optionScript.isDefined()) {%][%=ref.optionScript%][%}%]",
                                value = "[% if (ref.defaultValueExpression.isDefined()) {%][%=ref.defaultValueExpression%][%}%]",
                                calculated = false
                        ),
                        otherEnd = @RelationEnd(
                                field = "[%=ref.opposite.name%]",
                                xmiid = "[%=ref.opposite.ownerClass.origin.uuid%].[%=ref.opposite.name%]",
                                collection = [%=ref.opposite.type.isCollection()%],
                                type = [%if (ref.framework) {%][%=ref.opposite.type.bare().boInterface().fqName()%][%}else{%][%=ref.opposite.type.bare().bo().fqName()%][%}%].class,
                                kind = [%=metaKind.get(ref.opposite.kind)%],
                                minimum = [%=metaMultiplicity.get(ref.opposite.lower)%],
                                maximum = [%=metaMultiplicity.get(ref.opposite.upper)%],
                                navigable = [%=ref.opposite.navigable%],
                                script = "[% if (ref.opposite.derived) {%][%=ref.opposite.virtualExpressionScript%][%}%]",
                                description = "[%=escapeJavaLiteral(ref.opposite.derivedDescription)%]",
                                derived = [%=ref.opposite.derived%],
                                pimDerived = [%=ref.opposite.pimDerived%],
                                options = "[%=escapeJavaLiteral(ref.opposite.optionScript)%]",
                                value = "[%=escapeJavaLiteral(ref.opposite.defaultValueExpression)%]",
                                calculated = false
                        )
                )[%if (hasMore) {%][%=","%][%}%]
           [%}%]
        [%}%]
        [%} else {%]
        relations = {
        [%for (ref in class.allReferences()) {%]
                @Relation(
                        thisEnd = @RelationEnd(
                                field = "[%=ref.name%]",
                                xmiid = "[%=class.origin.uuid%].[%=ref.name%]",
                                collection = [%=ref.type.isCollection()%],
                                type = [%if (ref.framework) {%][%=ref.type.bare().boInterface().fqName()%][%}else{%][%=ref.type.bare().bo().fqName()%][%}%].class,
                                kind = [%=metaKind.get(ref.kind)%],
                                minimum = [%=metaMultiplicity.get(ref.lower)%],
                                maximum = [%=metaMultiplicity.get(ref.upper)%],
                                navigable = [%=ref.navigable%],
                                script = "[% if (ref.derived) {%][%=escapeJavaLiteral(ref.virtualExpressionScript)%][%}%]",
                                description = "[%=escapeJavaLiteral(ref.derivedDescription)%]",
                                derived = [%=ref.derived%],
                                pimDerived = [%=ref.pimDerived%],
                                options = "[%=escapeJavaLiteral(ref.optionScript)%]",
                                value = "[%=escapeJavaLiteral(ref.defaultValueExpression)%]",
                                calculated = false
                        ),
                        otherEnd = @RelationEnd(
                                field = "[%=ref.opposite.name%]",
                                xmiid = "[%=ref.opposite.ownerClass.origin.uuid%].[%=ref.opposite.name%]",
                                collection = [%=ref.opposite.type.isCollection()%],
                                type = [%if (ref.framework) {%][%=ref.opposite.type.bare().boInterface().fqName()%][%}else{%][%=ref.opposite.type.bare().bo().fqName()%][%}%].class,
                                kind = [%=metaKind.get(ref.opposite.kind)%],
                                minimum = [%=metaMultiplicity.get(ref.opposite.lower)%],
                                maximum = [%=metaMultiplicity.get(ref.opposite.upper)%],
                                navigable = [%=ref.opposite.navigable%],
                                script = "[% if (ref.opposite.derived) {%][%=escapeJavaLiteral(ref.opposite.virtualExpressionScript)%][%}%]",
                                description = "[%if (ref.opposite.derivedDescription.isDefined()) {%][%=escapeJavaLiteral(ref.opposite.derivedDescription)%][%}%]",
                                derived = [%=ref.opposite.derived%],
                                pimDerived = [%=ref.opposite.pimDerived%],
                                options = "[% if (ref.opposite.optionScript.isDefined()) {%][%=escapeJavaLiteral(ref.opposite.optionScript)%][%}%]",
                                value = "[% if (ref.opposite.defaultValueExpression.isDefined()) {%][%=escapeJavaLiteral(ref.opposite.defaultValueExpression)%][%}%]",
                                calculated = false
                        )
                )[%if (hasMore) {%][%=","%][%}%]
        [%}%]
        [%}%]
        }
)