[%
  import "../../operations/_importAll.eol";
  import "../../main.egl";
  
  out.setContentType("Java");
  
  macro_metainfo.populate("class", class.bo());
  macro_metainfo.populate("onlyFramework", true);
%]

package [%=class.package.fqName()%];

import hu.blackbelt.judo.business.bo.api.meta.annotation.Field;
import hu.blackbelt.judo.business.bo.api.meta.annotation.Meta;
import hu.blackbelt.judo.business.bo.api.meta.annotation.Relation;
import hu.blackbelt.judo.business.bo.api.meta.annotation.RelationEnd;

[%=macro_metainfo.process()%]

public interface  [%=class.name%] extends 
	[% if (class.supertype.isDefined()) {%] [%=class.supertype.bare().boInterface().fqName()%] 
	[%} else {%] hu.blackbelt.judo.business.bo.api.FrameworkEntity [%}%] 
	[% if (class.representsEnum) {%] , hu.blackbelt.judo.business.bo.api.Enumeration [%}%] {
	
	[%for (method in class.methods().select(m | m.kind = JAVA!JvmMethodKind#BO_INTERFACE)) {%]
		[% var parameter = method.parameters.get(0);
		   if (not parameter.type.isPrimitive() and not (parameter.type.isCollection() and parameter.type.componentType.isPrimitive())) {%] 
			[%if (parameter.type.isCollection()) {%]
				public java.util.List<[%=parameter.type.componentType.bare().boInterface().fqName()%]> get[%=parameter.name.firstToUpperCase()%]();
   				public void set[%=parameter.name.firstToUpperCase()%](java.util.List<[%=parameter.type.componentType.bare().boInterface().fqName()%]> [%=parameter.name%]);
   				
			[%} else {%]
				public <T extends [%=parameter.type.bare().boInterface().fqName()%]> void set[%=parameter.name.firstToUpperCase()%](T [%=parameter.name%]);
   				public <T extends [%=parameter.type.bare().boInterface().fqName()%]> T get[%=parameter.name.firstToUpperCase()%]();
  				
			[%}%]
		[%}%]
	[%}%]
	
	[%for (method in class.methods().select(m | m.kind = JAVA!JvmMethodKind#BO_INTERFACE)) {%]
		[%  var parameter = method.parameters.get(0);
		    if (parameter.type.isPrimitive()) {%] 
				public [%=parameter.type.fqName()%] get[%=parameter.name.firstToUpperCase()%]();
   				public void set[%=parameter.name.firstToUpperCase()%]([%=parameter.type.fqName()%] [%=parameter.name%]);
   				
		[%} else if (parameter.type.isCollection() and parameter.type.componentType.isPrimitive()) {%]
				public [%=parameter.type.componentType.fqName()%] get[%=parameter.name.firstToUpperCase()%]();
   				public void set[%=parameter.name.firstToUpperCase()%]([%=parameter.type.componentType.fqName()%] [%=parameter.name%]);
				
		[%}%]
	[%}%]
}
