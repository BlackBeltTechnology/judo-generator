[%
  import "../../operations/_importAll.eol";
  import "../../main.egl";
  out.setContentType("Java");
%]

package [%=class.package.fqName()%];

import com.google.common.base.Function;
import com.google.common.collect.ImmutableList;
import com.google.common.collect.FluentIterable;
import com.google.common.collect.Lists;

import [%=class.dto().fqName()%];

import javax.annotation.Nullable;
import static com.google.common.collect.ImmutableList.copyOf;

import lombok.Data;
import lombok.NoArgsConstructor;

@NoArgsConstructor
public class [%=class.name%] {

    private [%=class.dto().name%] dto = new [%=class.dto().name%]();

	[% for (attr in class.allAttributes()) { %]
        public [%=class.name%] [%=attr.name%]([%=attr.type.fqName()%] par) {
            dto.set[%=attr.name.firstToUpperCase()%](par);
            return this;
        }

    [%}%]
	[% for (ref in class.allReferences()) { %]
    	[% if (ref.navigable) { %]
    	    [% if (ref.type.isCollection()) { %]
                public [%=class.name%] writable[%=ref.name.firstToUpperCase()%]() {
                    dto.set[%=ref.name.firstToUpperCase()%](Lists.<[%=ref.type.bare().dto().fqName()%]>newArrayList());
                    return this;
                }

                public [%=class.name%] empty[%=ref.name.firstToUpperCase()%]() {
                    dto.set[%=ref.name.firstToUpperCase()%](ImmutableList.<[%=ref.type.bare().dto().fqName()%]>of());
                    return this;
                }

                public [%=class.name%] [%=ref.name%]([%=ref.type.bare().dto().fqName()%]... pars) {
                    dto.set[%=ref.name.firstToUpperCase()%](copyOf(pars));
                    return this;
                }

                public [%=class.name%] [%=ref.name%]Id(String... ids) {
                    dto.set[%=ref.name.firstToUpperCase()%](FluentIterable.from(copyOf(ids)).transform(new Function<String, [%=ref.type.bare().dto().fqName()%]>() {
                        @Nullable
                        @Override
                        public [%=ref.type.bare().dto().fqName()%] apply(String id) {
                            return new [%=ref.type.bare().fqName()%]().id(id).build();
                        }
                    }).toList());
                    return this;
                }

			[% } else { %]
                public [%=class.name%] [%=ref.name%]([%=ref.type.dto().fqName()%] par) {
                    dto.set[%=ref.name.firstToUpperCase()%](par);
                    return this;
                }

                public [%=class.name%] [%=ref.name%]Id(String id) {
                    dto.set[%=ref.name.firstToUpperCase()%](new [%=ref.type.fqName()%]().id(id).build());
                    return this;
                }
            [%}%]
        [%}%]
    [%}%]

    public [%=class.dto().name%] build() {
        [%=class.dto().name%] ret = dto;
        dto = new [%=class.dto().name%]();
        return ret;
    }
}
