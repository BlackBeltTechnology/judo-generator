@cached
operation voidType () : JAVA!JvmType {
	return JAVATYPES!JvmType.all.select( t | t.name = "Void").first();
}
@cached
operation intType () : JAVA!JvmType {
	return JAVATYPES!JvmType.all.select( t | t.name = "Integer").first();
}

@cached
operation stringType () : JAVA!JvmType {
	return JAVATYPES!JvmType.all.select( t | t.name = "String").first();
}

@cached
operation longType () : JAVA!JvmType {
	return JAVATYPES!JvmType.all.select( t | t.name = "Long").first();
}

@cached
operation urlType () : JAVA!JvmType {
    return JAVATYPES!JvmType.all.select( t | t.name = "URL").first();
}

@cached
operation idType () : JAVA!JvmType {
	return JAVATYPES!JvmType.all.select( t | t.useForJudoId).first();
}

@cached
operation JAVA!JvmType isURL() : Boolean {
    return self.uuid = urlType().uuid;
}

operation Boolean ternary(ifTrue : Any, ifFalse : Any) : Any {
    if (self) {
        return ifTrue;
    } else {
        return ifFalse;
    }
}

operation generateUuid(namespace : String, name : String, separator : String) : String {
	return namespace + separator + name;
}

operation createJvmList ( componentType : JAVA!JvmType) : JAVA!JvmList {
		var ret = new JAVA!JvmList;
		ret.uuid = generateUuid(componentType.uuid, "list", "_");
		ret.name = "List";	
		ret.package = JAVA!JvmModel.all.first().findJavaUtilPackage();
		ret.componentType = componentType;
	return ret;
}

operation escapeJavaLiteral(s : String) : String {
	if (s.isDefined()) {
		return s.replaceAll("\\\\", "\\\\\\\\").replaceAll("\n", " ");
	} else {
		return "";
	}
}