@cached
operation JAVA!JvmCoordinated clientAccessor () : String {
    return self.restTestClient().fqName() + "." + self.origin().name.firstToLowerCase() + "()";
}

@cached
operation JAVA!JvmType extractCall () : String {
    return self.bare().clientAccessor() + "." + self.isCollection().ternary("extractList", "extract");
}

@cached
operation JAVA!JvmType returnPre () : String {
    if (not self.isCollection()) {
        return self.restTestWrapperS().fqName() + ".from(";
    } else if (self.bare().hasFixedEnum()) {
        return self.restTestWrapperM().bare().fqName() + ".convertToEnum(";
    } else {
        return self.restTestWrapperM().bare().fqName() + ".from(";
    }
}

@cached
operation JAVA!JvmType returnPost () : String {
    if (self.bare().hasFixedEnum() and not self.isCollection()) {
        return ").toEnum()";
    } else {
        return ")";
    }
}

@cached
operation JAVA!JvmMethod parametersSignatureRestTestWrapperT () : String {
    return self.parameters.select(p | not p.representsJudoId).collect(p | p.type.typeDeclaration() + " " + p.name).concat(", ");
}

@cached
operation JAVA!JvmType typeDeclaration () : String {
    if (self.bare().isPrimitive()) {
        return self.fqName();
    } else if (self.bare().hasFixedEnum()) {
        return self.restDtoEnum().fqName();
    } else {
        return self.restTestWrapperT().fqName();
    }
}

operation JAVA!JvmType convertParam(paramName : String) : String {
    if (self.isPrimitive()) {
        return paramName;
    } else if (self.bare().hasFixedEnum()) {
        return self.clientAccessor() + ".queryByCode(" + paramName + ")";
    } else if (self.isCollection()) {
        return self.restTestWrapperM().bare().fqName() + ".convert(" + paramName + ")";
    } else {
        return paramName + " != null ? " + paramName + ".to() : null";
    }
}

@cached
operation JAVA!JvmClass allReferenceRestTestClientTypes () : Collection {
    return self.allReferences().collect(r | r.type.bare().restTestClient()).asSet().sortBy(t | t.fqName());
}
